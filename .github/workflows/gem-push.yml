name: Ruby Gem

on:
  push:
    branches: [ "main", "development" ]
  pull_request:
    branches: [ "main" ]

jobs:
  type-check:
    name: Sorbet Type Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.1.1

    - name: Install dependencies
      run: bundle install

    - name: Run Sorbet
      run: bundle exec srb tc

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: type-check
    environment: rubygem

    strategy:
      matrix:
        ruby-version: [3.1]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}

    - name: Install dependencies
      run: bundle install

    - name: Run tests
      run: bundle exec rspec

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.0.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  check-gemspec-change:
    name: Check if Gemspec Changed
    runs-on: ubuntu-latest
    needs: [ type-check, test ]
    if: github.ref == 'refs/heads/main' # Run this job only on main branch
    outputs:
      gemspec_changed: ${{ steps.check.outputs.gemspec_changed }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check if gemspec changed
        id: check
        run: |
          if git diff --name-only HEAD^ HEAD | grep -q 'arbac_verifier.gemspec'; then
            echo "gemspec_changed=true" >> $GITHUB_ENV
          else
            echo "gemspec_changed=false" >> $GITHUB_ENV
          fi

  build:
    name: Build + Publish
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' && needs.check-gemspec-change.outputs.gemspec_changed == 'true
    needs: [type-check, test]
    environment: rubygem
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up Ruby 3.1
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.1.1

    - name: Publish to RubyGems
      run: |
        mkdir -p $HOME/.gem
        touch $HOME/.gem/credentials
        chmod 0600 $HOME/.gem/credentials
        printf -- "---\n:rubygems_api_key: ${GEM_HOST_API_KEY}\n" > $HOME/.gem/credentials
        gem build *.gemspec
        gem push *.gem
      env:
        GEM_HOST_API_KEY: "${{secrets.RUBYGEMS_AUTH_TOKEN}}"
